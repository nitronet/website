<?xml version="1.0" encoding="UTF-8"?>
<dependency-injection>
    <ini category="services">:baseDir/config.ini</ini>
    
    <class-definition name="requestMatcher" class="Fwk\Core\Components\RequestMatcher\RequestMatcher" shared="true" />
    <class-definition name="urlRewriter" class="Fwk\Core\Components\UrlRewriter\UrlRewriterService" shared="true" />
    <class-definition name="resultTypeService" class="Fwk\Core\Components\ResultType\ResultTypeService" shared="true" />
    <class-definition name="_vh.embed" class="Fwk\Core\Components\ViewHelper\EmbedViewHelper" shared="true" />
    <class-definition name="_vh.url" class="Fwk\Core\Components\UrlRewriter\UrlViewHelper" shared="true">
        <argument>requestMatcher</argument>
        <argument>urlRewriter</argument>
    </class-definition>
    <class-definition name="_vh.escape" class="Fwk\Core\Components\ViewHelper\EscapeViewHelper" shared="true" />
    <class-definition name="viewHelper" class="Fwk\Core\Components\ViewHelper\ViewHelperService" shared="true">
        <call method="add">
            <argument>embed</argument>
            <argument>@_vh.embed</argument>
        </call>
        <call method="add">
            <argument>url</argument>
            <argument>@_vh.url</argument>
        </call>
        <call method="add">
            <argument>escape</argument>
            <argument>@_vh.escape</argument>
        </call>
        <call method="add">
            <argument>asset</argument>
            <argument>@_vh.AsseticViewHelper</argument>
        </call>
    </class-definition>
    
    <!--
        TWIG (fwk-twig)
    -->
    <array-definition name="twig.config">
        <param key="debug">true</param>
        <param key="cache">:packageDir/../cache</param>
    </array-definition>
    
    <!-- Twig_Loader definition -->
    <array-definition name="twig.paths">
        <param>:packageDir/../site/pages</param>
    </array-definition>
    
    <class-definition name="twig.loader" class="\Twig_Loader_Filesystem" shared="true">
        <argument>@twig.paths</argument>
    </class-definition>

    <!-- Twig_Environment definition -->
    <class-definition name="twigDebugExt" class="\Twig_Extension_Debug" />
    <class-definition name="twig" class="\Twig_Environment" shared="true">
        <argument>@twig.loader</argument>
        <argument>@twig.config</argument>
        <call method="addExtension">
            <argument>@twigDebugExt</argument>
        </call>
    </class-definition>
    
    <!--
        ASSETIC (fwk-assetic)
    -->
    <class-definition name="assetic.CssRewriteFilter" class="FwkAssetic\Filters\CssRewriteFilter" shared="true">
        <argument>@_vh.AsseticViewHelper</argument>
    </class-definition>
    <class-definition name="assetic.FilterManager" class="Assetic\FilterManager" shared="true">
        <call method="set">
            <argument>cssrewrite</argument>
            <argument>@assetic.CssRewriteFilter</argument>
        </call>
    </class-definition>
    <class-definition name="assetic.FilesystemCache" class="Assetic\Cache\FilesystemCache" shared="true">
        <argument>:assetic.cache.directory</argument>
    </class-definition>
    <class-definition name="assetic.CacheBustingWorker" class="Assetic\Factory\Worker\CacheBustingWorker" shared="true">
        <argument>:assetic.cache.strategy</argument>
    </class-definition>
    <class-definition name="assetic.AssetFactory" class="Assetic\Factory\AssetFactory" shared="true">
        <argument>:assetic.assets.directory</argument>
        <argument>:assetic.debug</argument>
        <call method="setFilterManager">
            <argument>@assetic.FilterManager</argument>
        </call>
        <!-- enable assetic cache -->
        <call method="addWorker">
            <argument>@assetic.CacheBustingWorker</argument>
        </call>
    </class-definition>
    
    <array-definition name="assetic.Shortcuts">
        <param key="bower">:packageDir/../site/bower_components</param>
        <param key="theme">:twig.templates.dir/assets</param>
    </array-definition>
    
    <class-definition name="assetic" class="FwkAssetic\AssetsService" shared="true">
        <argument>@assetic.AssetFactory</argument>
        <argument>@assetic.FilesystemCache</argument>
        <call method="addShortcuts">
            <argument>@assetic.Shortcuts</argument>
        </call>
    </class-definition>
    
    <class-definition name="_vh.AsseticViewHelper" class="\FwkAssetic\AssetViewHelper" shared="true">
        <argument>assetic</argument>
        <argument>url</argument>
        <argument>:assetic.debug</argument>
        <argument>:assetic.action.name</argument>
    </class-definition>
    
    
    <!--
        CMS
    -->
    <class-definition name="cms.twigProvider" class="FwkWWW\Providers\Page\TwigFilesystemProvider" shared="true">
        <argument>:cms.site.path</argument>
        <argument>@twig</argument>
    </class-definition>
    
    <array-definition name="cms.Providers">
        <param key="twig">@cms.twigProvider</param>
    </array-definition>
    
    <class-definition name="cms" class="FwkWWW\CmsService" shared="true">
        <argument>:packageDir/../site/site.yml</argument>
        <argument>@cms.Providers</argument>
        <call method="initServices">
            <argument>@self</argument>
        </call>
    </class-definition>
    
    <class-definition name="cms.RoutesProvider" class="FwkWWW\Providers\Routes\ConfigRoutesProvider" shared="true" />
    
    <class-definition name="cms.RoutesProviderListener" class="FwkWWW\Listeners\RoutesProviderListener">
        <argument>cms.RoutesProvider</argument>
        <argument>urlRewriter</argument>
        <argument>cms</argument>
    </class-definition>
    
    <!--
        CONSOLE
    -->
    <class-definition name="consoleApp" class="Symfony\Component\Console\Application" shared="true" />
    <class-definition name="cms.CommandsListener" class="FwkWWW\Listeners\CommandsListener">
        <argument>consoleApp</argument>
        <argument>cms</argument>
    </class-definition>

    <!--
    DATABASE & DAOs
    -->
    <array-definition name="db.config">
        <param key="dbname">:db.database</param>
        <param key="user">:db.user</param>
        <param key="password">:db.password</param>
        <param key="driver">:db.driver</param>
        <param key="host">:db.hostname</param>
    </array-definition>

    <class-definition name="db" class="Fwk\Db\Connection" shared="true">
        <argument>@db.config</argument>
    </class-definition>

    <!--
    COMMENTS
    -->
    <array-definition name="comments.config">
        <param key="autoThread">:comments.thread.auto</param>
        <param key="threadsTable">comments_threads</param>
        <param key="threadEntity">Nitronet\Comments\Model\Thread</param>
        <param key="commentsTable">comments</param>
        <param key="commentEntity">Nitronet\Comments\Model\Comment</param>
        <param key="commentPostAction">CommentPost</param>
    </array-definition>

    <class-definition name="comments" class="Nitronet\Comments\CommentsService" shared="true">
        <argument>@db</argument>
        <argument>@comments.config</argument>
    </class-definition>

</dependency-injection>
